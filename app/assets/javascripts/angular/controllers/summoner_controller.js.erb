app.controller('SummonerCtrl', ['$scope', '$routeParams', '$http',function($scope, $routeParams, $http){
  // Summoner Information
  // Set Initial Information
  $scope.summonerInfo = {};
  $scope.summonerInfo.searchData = {
    'id': $routeParams.summonerId,
    'region': $scope.$parent.selectedRegion.code
  };
  $scope.searchSummonerById = function () {
    $http.post('/summoner/id', $scope.summonerInfo.searchData).success(function(response){
      console.log(response);
      $scope.summonerInfo.profileIconId = response.summoner.profileIconId;
      $scope.summonerInfo.name = response.summoner.name;
      $scope.summonerInfo.level = response.summoner.level;
      $scope.summonerInfo.summonerId = response.summoner.summonerId;
    }).error(function(response){
      // noty error messages
    })
  };
  $scope.summonerInfo.league = {};
  $scope.queType = ["Solo 5x5", "Team 3x3", "Team 5x5"];
  $scope.badgeDefault = "<%= asset_path('badgeDefault.png') %>";
  $scope.getLeagueEntry = function (){
    $http.post('/summoner/get_league_entry', $scope.summonerInfo.searchData).success(function(response){
      console.log(response);
      $scope.summonerInfo.league.entry = response.league_entry;
      $scope.summonerInfo.borderIcon = response.border_icon;
      $scope.getLeagueAll();
    }).error(function(response){
      // noty error messages
    })
  };
  $scope.getLeagueAll = function (){
    var leagueEntry = $scope.summonerInfo.league.entry
    $scope.leagueSearch = $scope.summonerInfo.searchData;
    $scope.leagueSearch.queue = leagueEntry.solo5.queue;
    $scope.leagueSearch.leagueName = leagueEntry.solo5.name;
    $scope.leagueSearch.tier = leagueEntry.solo5.tier;
    $scope.leagueSearch.division = leagueEntry.solo5.entries[0].division;

    $http.post('/summoner/get_league_all', $scope.leagueSearch).success(function(response) {
        console.log(response);
        $scope.summonerInfo.league.all = response;
        $scope.getSummonersIcons(response.league_promo, "promoSummoners");
        $scope.getSummonersIcons(response.league_normal, "normalSummoners");
    }).error(function(response){
      // noty error messages
    })
  };
  $scope.changeLeagueAll = function (division){
    $scope.changeLeagueSearch = $scope.leagueSearch;
    switch (division){
      case 1:
        $scope.changeLeagueSearch.division = "I";
        break;
      case 2:
        $scope.changeLeagueSearch.division = "II";
        break;
      case 3:
        $scope.changeLeagueSearch.division = "III";
        break;
      case 4:
        $scope.changeLeagueSearch.division = "IV";
        break;
      case 5:
        $scope.changeLeagueSearch.division = "V";
        break;
    }
    $http.post('/summoner/get_league_page', $scope.changeLeagueSearch).success(function(response){
      console.log(response);
      $scope.summonerInfo.league.all = response;
      $scope.getSummonersIcons(response.league_promo, response.league_normal);
    })
  }
  //paginate for league page stuff
  $scope.leaguePage = {};
  $scope.leaguePage.current = 1;
  $scope.leaguePage.onPageChangeUp = function (){
    if (this.current > 1){
      this.current -= 1;
    $scope.changeLeagueAll(this.current);
    }
    console.log(this.current);
  };
  $scope.leaguePage.onPageChangeDown = function (){
    if (this.current < 5){
      this.current += 1;
    $scope.changeLeagueAll(this.current);
    }
    console.log(this.current);
  };
  $scope.getSummonersIcons = function (list1, list2){
    $scope.iconSearch = {};
    $scope.iconSearch.region = $scope.leagueSearch.region;
    $scope.iconSearch.summonerList = [];
    for (var index in list1) {
      $scope.iconSearch.summonerList.push(list1[index].summonerId);
    }
    for (var index in list2) {
      $scope.iconSearch.summonerList.push(list2[index].summonerId);
    }
    if ($scope.iconSearch.summonerList[0] != undefined){
      $http.post('/summoner/get_icon_list', $scope.iconSearch).success(function(response){
        console.log(response);
        $scope.summonerInfo.league.all.summoners = response.summoners;
      })
    }
  }

  $scope.summonerInfo.stats_summary = {}
  $scope.getStatsSummary = function (){
    $http.post('/summoner/get_stats_summary', $scope.summonerInfo.searchData).success(function(response){
      console.log(response);
      $scope.summonerInfo.stats_summary = response.stats_summary;
    }).error(function(response){
      // noty error messages
    })
  };
  $scope.summonerInfo.stats_ranked = {}
  $scope.getStatsRanked = function (){
    $http.post('/summoner/get_stats_ranked', $scope.summonerInfo.searchData).success(function(response){
      console.log(response);
      $scope.summonerInfo.stats_ranked_top5 = response.top5;
      $scope.summonerInfo.stats_ranked_all = response.all_ranked;
    }).error(function(response){
      // noty error messages
    })
  }

  $scope.summonerInfo.matches = {};
  $scope.summonerInfo.match = {};
  $scope.getMatchHistory = function () {
    $http.post('/matches/get_match_histories', $scope.summonerInfo.searchData).success(function(response){
      console.log(response);
      $scope.summonerInfo.matches = response.match_history;
      $scope.getMatchDetails(response.match_history[0].matchId);
      // $scope.getPositionFrequency();
    })
  };
  $scope.getMatchDetails = function (matchId) {
    $scope.selectedMatch = matchId;
    $scope.searchMatchDetails = $scope.summonerInfo.searchData;
    $scope.searchMatchDetails.matchId = matchId;
    $http.post('/matches/get_match_details', $scope.searchMatchDetails).success(function(response){
      console.log(response);
      $scope.summonerInfo.match.team = {};
      $scope.summonerInfo.match.team.team100 = [];
      $scope.summonerInfo.match.team.team200 = [];
      for (var i = 0; i < response.details.participants.length; i++){
        if (response.details.participants[i]['teamId'] == 100){
          $scope.summonerInfo.match.team.team100.push(response.details.participants[i]);
        } else {
          $scope.summonerInfo.match.team.team200.push(response.details.participants[i]);
        }
      }
      $scope.summonerInfo.match.details = response.details
      console.log($scope.summonerInfo.match);
    })
  };

  $scope.convertMsToDay = function (target){
    var date = new Date();
    timeNow = date.getTime();
    var diff = timeNow - target;
    return moment.unix(target/1000).fromNow();
  }

  $scope.timesToRepeat = ['a','a'];

  //table sorting stuff
  $scope.predicate = "";
  $scope.reverse = false;

  // Tabs stuff
  $scope.tabs = {};
  $scope.tabs.changed = function(tabHeading){
    $scope.tabs.status[tabHeading] = true;
    $scope.tabs.getInfo[tabHeading]();
  };
  $scope.tabs.deselected = function(tabHeading){
    $scope.tabs.status[tabHeading] = false;
  };
  $scope.tabs.status = {};
  $scope.tabs.status.profile = false;
  $scope.tabs.status.runes = false;
  $scope.tabs.status.masteries = false;
  $scope.tabs.status.matches = false;
  $scope.tabs.status.champions = false;
  $scope.tabs.status.league = false;  
  $scope.tabs.getInfo = {};
  $scope.tabs.getInfo.profile = function (){
    console.log("getting profile");
    $scope.searchSummonerById();
    $scope.getLeagueEntry();
    $scope.getStatsSummary();
    $scope.getStatsRanked();
    $scope.getMatchHistory();
  };
  $scope.tabs.getInfo.runes = function (){
    console.log("getting runes");
  };
  $scope.tabs.getInfo.masteries = function (){
    console.log("getting masteries");
  };
  $scope.tabs.getInfo.matches = function (){
    console.log("getting matches");
  };
  $scope.tabs.getInfo.champions = function (){
    console.log("getting champions");
  };
  $scope.tabs.getInfo.league = function (){
    console.log("getting league");
  };
}])
